swagger: "2.0"
info:
  title: "Geo-service"
  description: "API для получения информации об адресе"
  version: "1.0.0"
host: "localhost:8080" 
basePath: "/api" 
schemes:
  - "http" 

paths:
  /address/geocode:
    post:
      summary: "Геокодирование - защищенный ресурс"
      security:
      - bearerAuth: []
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/GeocodeRequest"
      responses:
        200:
          description: "Успешный ответ"
          schema:
            $ref: "#/definitions/GeocodeResponse"
        400:
          description: "Неверный запрос"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Неавторизован"  # токен отсутствует или неверен
          schema:
            $ref: "#/definitions/ErrorResponse"  # Ссылка на описание структуры ошибки
        403:
          description: "Доступ запрещён"  # токен не имеет прав на доступ к ресурсу
          schema:
            $ref: "#/definitions/ErrorResponse"  # Ссылка на описание структуры ошибки
        500:
          description: "Сервер недоступен"
          schema:
            $ref: "#/definitions/ErrorResponse" 

  /address/search:
    post:
      summary: "Поиск адресов - защищенный ресурс"
      security:
      - bearerAuth: []
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/SearchRequest"
      responses:
        200:
          description: "Успешный ответ"
          schema:
            $ref: "#/definitions/SearchResponse"
        400:
          description: "Неверный запрос"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Неавторизован"  # токен отсутствует или неверен
          schema:
            $ref: "#/definitions/ErrorResponse"  
        403:
          description: "Доступ запрещён"  
          schema:
            $ref: "#/definitions/ErrorResponse"  
        500:
          description: "Сервер недоступен"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /register:
    post:
      summary: "Регистрация нового пользователя"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/RegisterRequest"
      responses:
        200:
          description: "Пользователь успешно зарегистрирован"
          schema:
            $ref: "#/definitions/MessageResponse"
        400:
          description: "Неверный запрос или пользователь уже существует"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Ошибка на сервере"
          schema:
            $ref: "#/definitions/ErrorResponse"

  /login:
    post:
      summary: "Аутентификация пользователя"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/LoginRequest"
      responses:
        200:
          description: "Успешная аутентификация"
          schema:
            $ref: "#/definitions/LoginResponse"
        401:
          description: "Неверные учетные данные"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Ошибка на сервере"
          schema:
            $ref: "#/definitions/ErrorResponse"


definitions:
  GeocodeRequest:
    type: "object"
    properties:
      lat:
        type: "string"
        example: "60.0619836"
      lng:
        type: "string"
        example: "30.3121723"

  SearchRequest:
    type: "object"
    properties:
      query:
        type: "string"
        example: "спб просвещения 31/1"

  GeocodeResponse:
    type: "object"
    properties:
      suggestions:
        type: "array"
        items:
          $ref: "#/definitions/Address"

  SearchResponse:
    type: "object"
    properties:
      addresses:
        type: "array"
        items:
          $ref: "#/definitions/Address"

  RegisterRequest:
    type: "object"
    properties:
      email:
        type: "string"
        example: "user@example.com"
      password:
        type: "string"
        example: "password123"

  LoginRequest:
    type: "object"
    properties:
      email:
        type: "string"
        example: "user@example.com"
      password:
        type: "string"
        example: "password123"

  LoginResponse:
    type: "object"
    properties:
      token:
        type: "string"
        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."


  MessageResponse:
    type: "object"
    properties:
      message:
        type: "string"
        example: "User registered successfully"

  Address:
    type: "object"
    properties:
      value:
        type: "string"
      unrestricted_value:
        type: "string"
      postal_code:
        type: "string"
      country:
        type: "string"
      country_iso_code:
        type: "string"
      region_fias_id:
        type: "string"
      region:
        type: "string"
      city:
        type: "string"
      street:
        type: "string"
      house:
        type: "string"
      geo_lat:
        type: "string"
      geo_lon:
        type: "string"

  ErrorResponse:
    type: "object"
    properties:
      message:
        type: "string"

securityDefinitions:
  bearerAuth:
    type: "apiKey"
    name: "Authorization"
    in: "header"
